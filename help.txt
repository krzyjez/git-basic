# Powershell #

* **pwd** - katalog, w którym jesteś

# GIT #

* **git init** - uruchomione w katalogu, w którym chcemy zrobić folder gita, zamieni folder w folder gitowy
* **git status** - gdzie aktualnie się znajdujemy - w jakim repozytorium oraz status repozytorium
* **git add .** - dodanie do **tracked** wszystkich plików i katalogów w aktualnym repozytorium, dodanie plików do **tracked** jednocześnie zmienia im status na **staged**. Również aby dodać zmieniony plik do **staged** musimy użyć polecenia **add**
* **git commit** - robi commit wyświetlając edytor do napisania komunikatu - można to zrobić również tak: `git commit -m "komunikat to jest"`
* **git diff** - pokazuje różnice w plikach **ale tylko tych, które nie są `staged`**, jeśli chce się wyświetlić różnice w plikach, które już dodaliśmy (i są `staged`) należy posłużyć się `git diff --staged`.
* **git log** - pokazuje historię działań na repozytorium
* **git rm --cached filename** - jeśli coś nam się dodało do indeksu a nie chcemy tego commitować to możemy plik z niego wyrzucić tą komendą - nie wiem po co jest to --cached

## Słownik ##
* **HEAD** - ostatni commit
* **index** - pliki, które znajdą się w najbliższym commicie - inaczej pliki o statusie `staged`

## Branches ##
* **git branch branchname** - tworzy nową gałąź o podanej nazwie ale nie przełącza się na tą gałąź
* **git checkout branchname** - przełącza się na daną gałąź - ładuje ją, **uwaga! - jeśli w aktualnej gałęzi są jakieśnieskommitowane zmiany i przełączymy się na inną gałąź to zmiany te zostaną utracone!** (mam wrażenie, że często dochodzi do utracenia kawałka tekstu, może nie zapisałem wszystkiego na dysku). 
* **git checkout -b branchname** - tworzy nową gałąź i przełącza się na nią
* **git branch** - wyświetla wszystkie gałęzie zaznaczając gwiazdką tą, w której aktualnie się znajduje 
* **git merge branchname** - merdżuje dwie gałęzie - należy znajdować się w tej gałęzi **do której** che się zmerdżować gałąź branchname 

## Stashing ##
Stashing jest po to by móc przełączać się między gałęziami bez konieczności commitu - np. gdy musimy szybko w jakiejś gałęzi coś zmienić a aktualną gałąź mamy rozgrzebaną i nie nadaje się do commitu. Stashing można przetłumaczyć jako "odkładanie" - zmian na bok, na półkę?
* **git stash** - odkładamy zmiany na półkę.
* **git stash list** - możemy przejrzeć wszystkie odłożone zmiany
* **git stash apply** - wracamy do odłożonych na półce zmian (przywracamy je)

## Inne ##
* **.gitignore** - opis pliku znajduje się pod linkiem:[http://git-scm.com/docs/gitignore](http://git-scm.com/docs/gitignore)
* **aliasy** - w configu gita można zdefiniować aliasy - czyli własne skróty długaśnych komend gita
* 